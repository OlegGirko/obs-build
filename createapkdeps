#!/usr/bin/perl -w

# APK repo support

################################################################
#
# Copyright (c) 2024 SUSE Linux Products GmbH
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 or 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program (see the file COPYING); if not, write to the
# Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
#
################################################################

BEGIN {
  unshift @INC, ($::ENV{"BUILD_DIR"} || "/usr/lib/build");
}

use strict;

use Digest::MD5 ();
use File::Path ();

use Build ':arch';
use Build::Apkrepo;
use Build::Options;
use Build::Download;

my $cachedir = "/var/cache/build";

my $options = {
  'cachedir' => ':',
};

my ($opts, @args) = Build::Options::parse_options($options, @ARGV);
$cachedir = $opts->{'cachedir'} if $opts->{'cachedir'};

my $ua = Build::Download::create_ua();

for my $url (@args) {
  die("$url: not an remote repo") unless $url =~ /^(:?ftps?|https?):\/\/([^\/]*)\/?/;
  my $repoid = Digest::MD5::md5_hex($url);
  my $dir = "$cachedir/$repoid";
  $url .= '/' unless $url =~ /\/$/;
  File::Path::mkpath($dir);
  Build::Download::download("${url}APKINDEX.tar.gz", "$dir/.APKINDEX.tar.gz$$", "$dir/APKINDEX.tar.gz", 'ua' => $ua, 'retry' => 3);
  Build::Apkrepo::parse("$dir/APKINDEX.tar.gz", sub { Build::writedeps(\*STDOUT, $_[0], $url) }, 'addselfprovides' => 1, 'normalizedeps' => 1);
}
